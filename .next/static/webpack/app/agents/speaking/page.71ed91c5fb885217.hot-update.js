"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/agents/speaking/page",{

/***/ "(app-pages-browser)/./src/services/databaseService.ts":
/*!*****************************************!*\
  !*** ./src/services/databaseService.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"(app-pages-browser)/./node_modules/@prisma/client/index-browser.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _supabaseService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabaseService */ \"(app-pages-browser)/./src/services/supabaseService.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n// Initialize Prisma Client\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\nclass DatabaseService {\n    static getInstance() {\n        if (!DatabaseService.instance) {\n            DatabaseService.instance = new DatabaseService();\n        }\n        return DatabaseService.instance;\n    }\n    // Template Management\n    async createTemplate(data) {\n        if (this.isProduction) {\n            // In production, use Supabase\n            // Convert the data structure to match Supabase\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.supabaseService.createTemplate(data);\n        } else {\n            // In development, use local Prisma\n            return await prisma.speaking_Template.create({\n                data: {\n                    title: data.title,\n                    description: data.description,\n                    duration: data.duration,\n                    parts: {\n                        create: data.parts\n                    }\n                },\n                include: {\n                    parts: true\n                }\n            });\n        }\n    }\n    async getTemplates() {\n        if (this.isProduction) {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.supabaseService.getTemplates();\n        } else {\n            const response = await fetch('/api/templates');\n            if (!response.ok) {\n                throw new Error('Failed to fetch templates');\n            }\n            return await response.json();\n        }\n    }\n    // Session Management\n    async createSession(data) {\n        if (this.isProduction) {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.supabaseService.createSession(data);\n        } else {\n            try {\n                var _session_template_parts, _session_template;\n                const response = await fetch('/api/sessions', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(data)\n                });\n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(errorData.error || 'Failed to create session');\n                }\n                const session = await response.json();\n                if (!(session === null || session === void 0 ? void 0 : session.id) || !(session === null || session === void 0 ? void 0 : (_session_template = session.template) === null || _session_template === void 0 ? void 0 : (_session_template_parts = _session_template.parts) === null || _session_template_parts === void 0 ? void 0 : _session_template_parts.length)) {\n                    throw new Error('Invalid session data received from server');\n                }\n                return session;\n            } catch (error) {\n                console.error('Error creating session:', error);\n                throw error instanceof Error ? error : new Error('Failed to create session');\n            }\n        }\n    }\n    async addMessageToSession(data) {\n        if (this.isProduction) {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.supabaseService.createMessage({\n                session_id: data.sessionId,\n                role: data.role,\n                content: data.content\n            });\n        } else {\n            const response = await fetch('/api/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to add message');\n            }\n            return await response.json();\n        }\n    }\n    async updateSessionMetrics(sessionId, metrics) {\n        if (this.isProduction) {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.supabaseService.updateSessionMetrics(sessionId, metrics);\n        } else {\n            const response = await fetch(\"/api/sessions/\".concat(sessionId, \"/metrics\"), {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(metrics)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to update metrics');\n            }\n            return await response.json();\n        }\n    }\n    async getSessionWithDetails(sessionId) {\n        if (this.isProduction) {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.supabaseService.getSessionMessages(sessionId);\n        } else {\n            const response = await fetch(\"/api/sessions/\".concat(sessionId));\n            if (!response.ok) {\n                throw new Error('Failed to fetch session details');\n            }\n            return await response.json();\n        }\n    }\n    constructor(){\n        this.isProduction = process.env.NEXT_PUBLIC_ENV === 'production';\n    }\n}\nconst databaseService = DatabaseService.getInstance();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/databaseService.ts\n"));

/***/ })

});